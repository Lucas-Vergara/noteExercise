{"version":3,"sources":["components/NoteBox/NoteBox.tsx","components/Sidebar/Sidebar.tsx","components/Timer/Timer.tsx","components/Layout/notes.tsx","components/Layout/Layout.tsx","features/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["NoteBox","props","note","setStart","React","createElement","Box","display","onClick","Card","sx","backgroundColor","borderRadius","minWidth","minHeight","CardContent","fontSize","color","justifyContent","alignItems","Sidebar","_ref","collapsed","setTimerTotal","setTimerInterval","_useState","useState","_useState2","_slicedToArray","sidebarCollapsed","setSidebarCollapsed","_useState3","_useState4","timerTotal","setTimerTotalState","_useState5","_useState6","timerInterval","setTimerIntervalState","handleSetTimerTotal","value","handleSetTimerInterval","SidebarComponent","style","height","Menu","renderExpandIcon","MenuItem","MenuIcon","SubMenu","icon","TimerIcon","label","TextField","variant","InputProps","endAdornment","InputAdornment","position","onChange","e","parseFloat","target","isNaN","parseInt","Timer","start","removeNote","notes","setCurrentNote","time","setTime","running","setRunning","useEffect","timer","setInterval","prevTime","clearInterval","intervalTimer","randomIndex","Math","floor","random","length","selectedNote","hours","minutes","seconds","formattedHours","toString","padStart","formattedMinutes","formattedSeconds","concat","formatTime","allNotes","Layout","_useState7","_useState8","setNotes","_useState9","_useState10","currentNote","updatedNotes","filter","n","handleKeyDown","event","code","handleKeyPress","document","addEventListener","removeEventListener","Grid","container","item","xs","flexDirection","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ddc53618.chunk.js","sourcesContent":["import { Box, Card, CardContent } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  note: string;\r\n  setStart: (boolean: boolean) => void;\r\n\r\n}\r\n\r\nfunction NoteBox(props: Props) {\r\n  const { note, setStart } = props;\r\n  const handleClick = (): void => {\r\n    setStart(true)\r\n  };\r\n\r\n  return (\r\n    <Box display=\"inline-block\" onClick={handleClick}>\r\n      <Card\r\n        sx={{\r\n          backgroundColor: \"#415986ff\",\r\n          borderRadius: \"50%\",\r\n          minWidth:'20vw',\r\n          minHeight:'20vw'\r\n        }}\r\n      >\r\n        <CardContent\r\n          sx={{\r\n            fontSize: \"25vh\",\r\n            color:'#FBF3EAff',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          {note}\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NoteBox;\r\n","import { CSSObject, InputAdornment, TextField } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport TimerIcon from \"@mui/icons-material/Timer\";\r\n\r\nimport { Sidebar as SidebarComponent, Menu, MenuItem, SubMenu } from \"react-pro-sidebar\";\r\n\r\ninterface SidebarProps {\r\n  collapsed: boolean;\r\n  timerTotal: number;\r\n  timerInterval: number;\r\n  setTimerTotal: (value: number) => void;\r\n  setTimerInterval: (value: number) => void;\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ collapsed,setTimerTotal, setTimerInterval }) => {\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState<boolean>(collapsed);\r\n  const [timerTotal, setTimerTotalState] = useState<number>(900); // 15 MINUTES\r\n  const [timerInterval, setTimerIntervalState] = useState<number>(30); \r\n\r\n  const handleToggleSidebar = () => {\r\n    setSidebarCollapsed(!sidebarCollapsed);\r\n  };\r\n\r\n  const handleSetTimerTotal = (value: number) => {\r\n    setTimerTotal(value);\r\n    setTimerTotalState(value);\r\n  };\r\n\r\n  const handleSetTimerInterval = (value: number) => {\r\n    setTimerInterval(value);\r\n    setTimerIntervalState(value);\r\n  };\r\n\r\n  return (\r\n    <SidebarComponent\r\n      collapsed={sidebarCollapsed}\r\n      style={{ height: \"100%\", color: \"#658D87ff\" }}\r\n    >\r\n      <Menu renderExpandIcon={() => null}>\r\n        <MenuItem onClick={handleToggleSidebar}>\r\n          <MenuIcon />\r\n        </MenuItem>\r\n        <SubMenu icon={<TimerIcon />} label=\"Ajustes del Reloj\">\r\n          <MenuItem>\r\n            <TextField\r\n              value={timerTotal / 60}\r\n              label=\"Tiempo Total\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position=\"start\">minutos</InputAdornment>,\r\n              }}\r\n              onChange={(e) => {\r\n                const value = parseFloat(e.target.value);\r\n                if (isNaN(value)) {\r\n                  handleSetTimerTotal(0);\r\n                } else {\r\n                  handleSetTimerTotal(value * 60);\r\n                }\r\n              }}\r\n            />\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <TextField\r\n              value={timerInterval}\r\n              label=\"Intervalo\"\r\n              variant=\"standard\"\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position=\"start\">segundos</InputAdornment>,\r\n              }}\r\n              onChange={(e) => {\r\n                const value = parseInt(e.target.value);\r\n                if (isNaN(value)) {\r\n                  handleSetTimerInterval(0);\r\n                } else {\r\n                  handleSetTimerInterval(value);\r\n                }\r\n              }}\r\n            />\r\n          </MenuItem>\r\n        </SubMenu>\r\n      </Menu>\r\n    </SidebarComponent>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\ntype Props = {\r\n  timerTotal: number;\r\n  timerInterval: number;\r\n  start: boolean;\r\n  notes: string[];\r\n  setCurrentNote: (note: string) => void;\r\n  removeNote: (note: string) => void;\r\n};\r\n\r\nfunction Timer(props: Props) {\r\n  const { timerTotal, timerInterval, start, removeNote, notes, setCurrentNote} = props;\r\n  const [time, setTime] = useState(timerTotal);\r\n  const [running, setRunning] = useState<boolean>(start);\r\n  \r\n  useEffect(()=> {\r\n    setRunning(start)\r\n  }, [start])\r\n\r\n  useEffect(() => {\r\n    setTime(timerTotal)\r\n  }, [timerTotal])\r\n\r\n  useEffect(() => {\r\n    if (running) {\r\n      const timer = setInterval(() => {\r\n        setTime((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [running]);\r\n\r\n  useEffect(() => {\r\n    if (running) {\r\n      const intervalTimer = setInterval(() => {\r\n        const randomIndex = Math.floor(Math.random() * notes.length);\r\n        const selectedNote = notes[randomIndex];\r\n        removeNote(selectedNote);\r\n        setCurrentNote(selectedNote)\r\n      }, timerInterval * 1000);\r\n\r\n      \r\n      return () => clearInterval(intervalTimer);\r\n    }\r\n  }, [timerInterval, running]);\r\n\r\n  useEffect(() => {\r\n    if (time <= 0) {\r\n      setRunning(false);\r\n    }\r\n  }, [time, timerInterval]);\r\n\r\n  const formatTime = (time: number): string => {\r\n    const hours = Math.floor(time / 3600);\r\n    const minutes = Math.floor((time % 3600) / 60);\r\n    const seconds = time % 60;\r\n\r\n    const formattedHours = hours.toString().padStart(2, \"0\");\r\n    const formattedMinutes = minutes.toString().padStart(2, \"0\");\r\n    const formattedSeconds = seconds.toString().padStart(2, \"0\");\r\n\r\n    return `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;\r\n  };\r\n\r\n  return time > 0 ? (\r\n    <div style={{ fontSize: \"7vh\", color: \"#415986ff\" }}>\r\n      {formatTime(time)}\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport default Timer;\r\n","export const allNotes: string[] = [\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n  \"A♯\",\r\n  \"B♯\",\r\n  \"C♯\",\r\n  \"D♯\",\r\n  \"E♯\",\r\n  \"F♯\",\r\n  \"G♯\",\r\n  \"A♭\",\r\n  \"B♭\",\r\n  \"C♭\",\r\n  \"D♭\",\r\n  \"E♭\",\r\n  \"F♭\",\r\n  \"G♭\",\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport NoteBox from \"../NoteBox/NoteBox\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Timer from \"../Timer/Timer\";\r\nimport { allNotes } from \"./notes\";\r\n\r\nconst Layout = () => {\r\n  const [start, setStart] = useState<boolean>(false);\r\n  const [timerTotal, setTimerTotal] = useState<number>(900); // 15 MINUTES\r\n  const [timerInterval, setTimerInterval] = useState<number>(30);\r\n\r\n  const [notes, setNotes] = useState<string[]>(allNotes);\r\n  const [currentNote, setCurrentNote] = useState<string>(\"𝄞\");\r\n\r\nconst removeNote = (note: string) => {\r\n  const updatedNotes = notes.filter((n) => n !== note);\r\n  setNotes(updatedNotes);\r\n};\r\n\r\n  const handleKeyPress = (event: KeyboardEvent) => {\r\n    if (event.code === \"Space\") {\r\n      setStart(true);\r\n      const randomIndex = Math.floor(Math.random() * notes.length);\r\n      const selectedNote = notes[randomIndex];\r\n      removeNote(selectedNote);\r\n      setCurrentNote(selectedNote)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      handleKeyPress(event);\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      sx={{\r\n        height: \"100vh\",\r\n        backgroundColor: \"#FBF3EAff\",\r\n      }}\r\n    >\r\n      <Grid item xs={2}>\r\n        <Sidebar\r\n          collapsed={true}\r\n          timerTotal={timerTotal}\r\n          timerInterval={timerInterval}\r\n          setTimerTotal={setTimerTotal}\r\n          setTimerInterval={setTimerInterval}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={8}\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <NoteBox note={currentNote} setStart={setStart}/>\r\n        <Timer\r\n          timerTotal={timerTotal}\r\n          timerInterval={timerInterval}\r\n          start={start}\r\n          removeNote={removeNote}\r\n          notes={notes}\r\n          setCurrentNote={setCurrentNote}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Layout from '../../components/Layout/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './features/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}